/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.nauta.voyager.dialog;

import com.nauta.voyager.util.ServiceFactory;
import com.nauta.voyager.util.VoyagerContext;
import com.nauta.voyager.entity.Raft;
import com.nauta.voyager.service.FunctionService;
import com.nauta.voyager.service.PobService;
import com.nauta.voyager.entity.RaftKey;
import com.nauta.voyager.entity.RaftKeyType;
import com.nauta.voyager.service.RaftService;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;
import static javax.swing.SwingConstants.CENTER;

/**
 *
 * @author rodrigo
 */
public class AddRuleDialog extends javax.swing.JDialog {
    
    private static final String FUNCTION = "Função";
    private static final String CABIN = "Camarote";     
    private static final String TITLE = "Regra de Balsa";    
    
    private final RaftKey originalKey;
    
    private final RaftService raftService;
    private final FunctionService functionService;
    private final PobService pobService;
    
    
    /**
     * Creates new form AddRuleDialog
     */
    public AddRuleDialog(JDialog parent, RaftKey key) {
        super(parent, true);
        raftService = ServiceFactory.getRaftService();
        functionService = ServiceFactory.getFunctionService();
        pobService = ServiceFactory.getPobService();
        
        
        initComponents();
        initPresentationLogic();
                
        originalKey = key;
        
        readGUIState(key);
        
        setTitle(TITLE);
        //setVisible(true);
    }   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        raftField = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        linkField = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        valueField = new javax.swing.JComboBox();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        raftField.setBackground(new java.awt.Color(255, 255, 255));
        raftField.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        raftField.setForeground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Balsa");

        linkField.setBackground(new java.awt.Color(255, 255, 255));
        linkField.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        linkField.setForeground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Vinculada a");

        jLabel11.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Valor");

        valueField.setBackground(new java.awt.Color(255, 255, 255));
        valueField.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        valueField.setForeground(new java.awt.Color(0, 0, 0));

        saveButton.setBackground(new java.awt.Color(0, 51, 102));
        saveButton.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Salvar");
        saveButton.setActionCommand("save");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(raftField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(linkField, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel9)
                            .addGap(1, 1, 1)
                            .addComponent(raftField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addGap(1, 1, 1)
                            .addComponent(linkField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(valueField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );

        raftField.setRenderer(new RaftRenderer());
        //ValueRenderer renderer = new ValueRenderer();
        //valueField.setRenderer(renderer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void initPresentationLogic() {
        // Sets up raft field
        raftField.addItem(Raft.PORT);
        raftField.addItem(Raft.STBD);       
        
        // Sets up linkField
        linkField.addItemListener(new LinkFieldHandler());        
        linkField.addItem(FUNCTION);
        linkField.addItem(CABIN);
        
        // Sets up saveButton
        saveButton.addActionListener(new SaveButtonHandler());        
    }
    
    private void readGUIState(RaftKey key) {
        if (key == null) {
            linkField.setSelectedItem(FUNCTION);
            return;
        }
        
        
        raftField.setSelectedItem(raftService.getRaftByKey(key));        
        
        
        if (key.getType().equals(RaftKeyType.FUNCTION)) {            
            linkField.setSelectedItem(FUNCTION);
        } else {
            linkField.setSelectedItem(CABIN);
        }
        
        valueField.setSelectedItem(key);        
    }
    
    // Adds a listener to linkField, to change the values available at 
    // valueField according to the type selected at linkField
    private final class LinkFieldHandler implements ItemListener {
        
        @Override
        public void itemStateChanged(ItemEvent e) {           
            
            if (e.getStateChange() == ItemEvent.SELECTED) {
                valueField.removeAllItems();
                if (e.getItem().equals(FUNCTION)) {                    
                    functionService
                            .getAllFunctions()
                            .forEach(f -> valueField.addItem(f));
                } else {                    
                    pobService.getAllCabins()
                            .forEach(c -> valueField.addItem(c));
                }             
            }
        }        
    }
    
    private final class SaveButtonHandler implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {           
            // Removes the previous key first
            if (originalKey != null) {
                raftService.removeRaftRule(originalKey);                            
            }

            // Adds the raft rule to model. It will overwrite any previous rule,
            // if existant            
            RaftKey key = (RaftKey) valueField.getSelectedItem();
            raftService.addRaftRule(key, (Raft) raftField.getSelectedItem());
            
            VoyagerContext.getContext().fireStateChanged();
            dispose();
        }
        
    }
    
    // Implements custom renderer for raftField
    class RaftRenderer extends JLabel implements 
            ListCellRenderer {
    
        public RaftRenderer() {
            setOpaque(true);            
            setVerticalAlignment(CENTER);
        }

        @Override
        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean cellHasFocus) {
            Raft raft = (Raft) value;
            
            setText(raft.textPT());
                        
            return this;            
        }   
    }   
    
    // Implementes custom renderer for valueField combobox
    class ValueRenderer extends JLabel implements 
            ListCellRenderer {
    
        public ValueRenderer() {
            setOpaque(true);            
            setVerticalAlignment(CENTER);
        }

        @Override
        public Component getListCellRendererComponent(JList list, Object value,
                int index, boolean isSelected, boolean cellHasFocus) {
            
            RaftKey entry = (RaftKey) value;
            setText(entry.asKey());                
                        
            return this;            
        }   
    }   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox<String> linkField;
    private javax.swing.JComboBox raftField;
    private javax.swing.JButton saveButton;
    private javax.swing.JComboBox valueField;
    // End of variables declaration//GEN-END:variables
}
